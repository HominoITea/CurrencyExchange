using ClientShared.Exceptions;
using Microsoft.Xaml.Behaviors;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Windows;
using System.Windows.Controls;
using WpfClient.Views.Controls;

namespace WpfClient.Views.Behavior
{
    public class DataGridColumnBehavior : Behavior<DataGrid>
    {
        private Dictionary<string, DataGridColumnControl> _columns;
        private IReadOnlyList<string> _columnsName;

        protected override void OnAttached()
        {
            base.OnAttached();

            AssociatedObject.AutoGeneratingColumn += EventGeneratingColumn;
            AssociatedObject.AutoGeneratedColumns += EventGeneratedColumns;

            AssociatedObject.Loaded += EventLoaded;
        }

        private void EventGeneratedColumns(object sender, EventArgs e)
        {
            _columns = AssociatedObject.Columns
                .OfType<DataGridColumnControl>()
                .ToDictionary(x => x.ColumnName, x => x);

            _columnsName = _columns.Keys.ToList();
        }

        private void EventGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            var propertyDescriptor = (PropertyDescriptor)e.PropertyDescriptor;          
            var display = (DisplayNameAttribute) propertyDescriptor.Attributes[typeof(DisplayNameAttribute)];

            e.Column = new DataGridColumnControl(propertyDescriptor.Name)
            {
                Header = !string.IsNullOrEmpty(display.DisplayName) 
                            ? display.DisplayName 
                            : "Col",

                CellTemplate = GetTemplate(propertyDescriptor.PropertyType),
                IsReadOnly = propertyDescriptor.PropertyType == typeof(DateTime),
            };
        }

        private DataTemplate GetTemplate(Type propertyType) 
        {
            var dic = new Dictionary<Type, DataTemplate>
            {
                { typeof(DateTime), Application.Current.Resources["DayNumberCellTemplate"] as DataTemplate },
                { typeof(double), Application.Current.Resources["CurrencyRateCellTemplate"] as DataTemplate },
            };
            return dic[propertyType];  
        }
        

        private void EventLoaded(object sender, RoutedEventArgs e)
        {
            _columns = new Dictionary<string, DataGridColumnControl>();
            _columnsName = new List<string>();
        }
    }
}
